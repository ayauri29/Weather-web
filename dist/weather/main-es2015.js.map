{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animations/loading.animation.ts","./src/app/animations/showUp.animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/current-weather/current-weather.component.ts","./src/app/current-weather/current-weather.component.html","./src/app/forecast/forecast.component.ts","./src/app/forecast/forecast.component.html","./src/app/geolocation-button/geolocation-button.component.ts","./src/app/geolocation-button/geolocation-button.component.html","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/app/services/current-weather.service.ts","./src/app/services/forecast.service.ts","./src/app/services/geolocation.service.ts","./src/app/weather-card/weather-card.component.ts","./src/app/weather-card/weather-card.component.html","./src/app/weather-icon/weather-icon.component.ts","./src/app/weather-icon/weather-icon.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAuF;AAChF,MAAM,gBAAgB,GAAG;IAC9B,OAAO,mEAAO,CAAC,SAAS,EAAE;QACxB,sEAAU,CAAC,QAAQ,EAAE;YACnB,iEAAK,CAAC,QAAQ,EAAE;gBACd,mEAAO,CAAC,GAAG,EAAE;oBACX,mEAAO,CAAC,OAAO,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC;iBACrC,CAAC;aACH,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;YACnB,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC;gBAClB,mEAAO,CAAC,GAAG,EAAE;oBACX,mEAAO,CAAC,OAAO,EAAE,iEAAK,CAAC,EAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC;iBACrC,CAAC;aACH,EAAE,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;SACpB,CAAC;KACH,CAAC,CAAC;AACL,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAiG;AAC1F,MAAM,eAAe,GAAG,mEAAO,CAAC,kBAAkB,EAAE;IACzD,sEAAU,CAAC,QAAQ,EAAE;QACnB,iEAAK,CAAC,QAAQ,EAAE;YACd,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC;YAC3C,mEAAO,CAAC,EAAE,EAAE;gBACV,mEAAO,CAAC,GAAG,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC,CAAC;aAC1D,CAAC;SACH,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;KACrB,CAAC;CACH,CAAC;AAEK,MAAM,MAAM,GAAG,mEAAO,CAAC,eAAe,EAAC;IAC5C,iEAAK,CAAC,IAAI,EAAE,iEAAK,CAAC,EAAE,OAAO,EAAC,CAAC,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC,CAAC;IACxD,sEAAU,CAAC,QAAQ,EAAE;QACnB,iEAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,WAAW,EAAC,CAAC;QAC3C,mEAAO,CAAC,GAAG,CAAC;KACb,CAAC;CACH,CAAC;;;;;;;;;;;;;AClBF;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;;AASnC,MAAM,YAAY;IAGvB,YAAmB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;QAF1D,UAAK,GAAG,SAAS,CAAC;IAE2C,CAAC;IAC9D,QAAQ;QACN,gDAAgD;IAClD,CAAC;;wEANU,YAAY;4FAAZ,YAAY;QCTzB,sEACE;QAAA,iFAA2C;QAC3C,yEAA2B;QAC3B,0EAA6B;QAC7B,oFAAiD;QACjD,uDACF;;;QAAA,4DAAM;;QADJ,0DACF;QADE,6OACF;;6FDGa,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACY;AAEG;AACT;AACuC;AACT;AACA;AACX;AACH;AACgB;AACgB;;AAoBxF,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,6FAAuB;SACxB;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,kGAAuB;QACvB,yFAAoB;QACpB,yFAAoB;QACpB,8EAAiB;QACjB,2EAAgB;QAChB,4GAA0B,aAG1B,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,6FAAuB;6FAKd,SAAS;cAnBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kGAAuB;oBACvB,yFAAoB;oBACpB,yFAAoB;oBACpB,8EAAiB;oBACjB,2EAAgB;oBAChB,4GAA0B;iBAC3B;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,6FAAuB;iBACxB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEO;;;;;AAQlD,MAAM,uBAAuB;IAElC,YAAmB,cAAsC;QAAtC,mBAAc,GAAd,cAAc,CAAwB;IAAI,CAAC;IAE9D,QAAQ;QACN,gDAAgD;IAClD,CAAC;;8FANU,uBAAuB;uGAAvB,uBAAuB;QCVpC,iFAAkG;;;QAAhF,qFAAgB;60JDQpB,CAAC,oEAAM,CAAC;6FAET,uBAAuB;cANnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;gBAC/C,UAAU,EAAE,CAAC,oEAAM,CAAC;aACrB;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEgB;;;;;;ICDhE,iFAEmB;;;IAFD,+EAAmB;;ADShC,MAAM,iBAAiB;IAE5B,YAAmB,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;IAAI,CAAC;IAEzD,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCV9B,sEACE;;QAAA,uIAEA;;QACF,4DAAM;;;;QAJD,wFAAkE;QAC/B,0DAAwD;QAAxD,kKAAwD;+cDOlF,CAAC,6EAAe,CAAC;6FAElB,iBAAiB;cAN7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;gBACxC,UAAU,EAAE,CAAC,6EAAe,CAAC;aAC9B;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,sEACE;IAAA,4EACE;IADM,wSAAS,8CAAuC,IAAC;IACvD,sFACF;IAAA,4DAAS;IACT,oEAAG;IAAA,iIAAiE;IAAA,4DAAI;IAC1E,4DAAM;;ADGC,MAAM,0BAA0B;IAErC,YAAmB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QADzD,WAAM,GAAY,KAAK,CAAC;IACqC,CAAC;IAE9D,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,SAAS;YACjC,IAAG,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE;QAChD,CAAC,CAAC;IACJ,CAAC;;oGAXU,0BAA0B;0GAA1B,0BAA0B;QCRvC,sHACE;;;QADG,kKAA6C;;6FDQrC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACiB;;;;;;ICAjE,oEAAiG;;;IAA9C,oJAAuC;;;IAD5F,sEACE;IAAA,kHAA2F;IAC7F,4DAAM;;;IAFD,4FAA4B;IAC1B,0DAA8B;IAA9B,oFAA8B;;ADS9B,MAAM,gBAAgB;IAK3B,YAAmB,qBAA6C;QAA7C,0BAAqB,GAArB,qBAAqB,CAAwB;QAJhE,cAAS,GAAe,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,SAAS,CAAC;QAC9E,aAAQ,GAAe,IAAI,CAAC,SAAS,CAAC;IAG8B,CAAC;IAErE,QAAQ;QACN,IAAI,CAAC,GAAG,EAAE,CAAC;IACb,CAAC;IAED,GAAG;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,qBAAqB;QACnB,UAAU,CAAC,GAAE,EAAE;YACb,IAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC,GAAG,EAAE;YAC/C,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;IACvC,CAAC;IACD,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;;gFAzBU,gBAAgB;gGAAhB,gBAAgB;QCV7B,4GACE;;;QADgC,sKAAiD;+xDDQrE,CAAC,sFAAgB,EAAE,CAAC;6FAErB,gBAAgB;cAN5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;gBACvC,UAAU,EAAE,CAAC,sFAAgB,EAAE,CAAC;aACjC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAEd;AACkB;AAExB;;;;AAM3B,MAAM,qBAAqB;IAMhC,YAAoB,IAAiB,EAAU,kBAAsC;QAAjE,SAAI,GAAJ,IAAI,CAAa;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QAL9E,mBAAc,GAAkB,IAAI,4CAAO,EAAO,CAAC;QAG1D,aAAQ,GAAY,iDAAiD;QAGnE,qBAAqB;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CACrD,0DAAG,CAAC,CAAC,IAAU,EAAE,EAAE;YACjB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,OAAO,mBACT,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,IACjB,WAAW,CACf,CAAC;YACF,OAAO,OAAO,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC;IACH,CAAC;IAEF,GAAG,CAAC,MAAe;QACjB,YAAY;QACZ,IAAI,IAAI,GAAY,QAAQ,MAAM,CAAC,GAAG,QAAQ,MAAM,CAAC,GAAG,UAAU,qEAAW,CAAC,GAAG,eAAe,CAAC;QACjG,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI;QAC9B,mBAAmB;QACnB,gCAAgC;QAChC,kFAAkF;QAClF,IAAI;QAEJ,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrE,CAAC;;0FAlCU,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAEZ;AACkB;AAExB;;;;AAO7B,MAAM,eAAe;IAM1B,YAAoB,IAAgB,EAAU,kBAAsC;QAAhE,SAAI,GAAJ,IAAI,CAAY;QAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;QAL7E,mBAAc,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAGzD,aAAQ,GAAW,kDAAkD;QAGnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC;IAEJ,CAAC;IAED,aAAa,CAAC,IAAS;QACrB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YAChC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;YAC7C,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACzB,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE;YAE3B,IAAI,UAAU,GAAY,YAAY,CAAC,GAAG,CAAC,IAAI;gBAC7C,UAAU,EAAE,EAAE;aACf,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,KAAK,KAAK,EAAE,EAAE;gBACnC,IAAI,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrC,UAAU,mCAAQ,UAAU,GAAK,MAAM,CAAE,CAAC;gBAC1C,UAAU,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE;gBAC1B,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;aACjC;YAED,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE;gBACzF,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ;aACxD;YACD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE;gBACzF,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ;aACxD;YAED,YAAY,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAED,GAAG,CAAC,MAAc;QAChB,YAAY;QACZ,IAAI,IAAI,GAAW,QAAQ,MAAM,CAAC,GAAG,QAAQ,MAAM,CAAC,GAAG,UAAU,qEAAW,CAAC,GAAG,eAAe,CAAC;QAChG,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI;QAC9B,qBAAqB;QACrB,iCAAiC;QACjC,kFAAkF;QAClF,IAAI;QAEJ,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrE,CAAC;;8EAxDU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAA2C;AAEA;;AAKpC,MAAM,kBAAkB;IAM7B;QALO,kBAAa,GAAoB,IAAI,4CAAO,EAAU,CAAC;QACvD,YAAO,GAAwB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAKtE,IAAI,CAAC,YAAY,GAAI,SAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,IAAI,EAAC,aAAa,EAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YAC/F,OAAO,UAAU,CAAC,KAAK;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB;QAChB,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SAC5C;QAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAC9B,IAAG,CAAC,SAAS,IAAI,CAAC,CAAC,aAAa,IAAI,SAAS,CAAC;gBAAE,GAAG,CAAC,8BAA8B,CAAC,CAAC;YACpF,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpD,GAAG,CAAC;oBACF,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;oBAC7B,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;iBAC/B,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;;oFAhCU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICIvD,yEACE;IAAA,oEAAG;IAAA,sEAAW;IAAA,4DAAI;IAClB,uEAAe;IAAA,uDAAiB;IAAA,4DAAI;IACtC,4DAAM;;;IADW,0DAAiB;IAAjB,mGAAiB;;;IAElC,0EACE;IAAA,uDACA;IAAA,uEAAM;IAAA,sEAAM;IAAA,4DAAO;IACrB,4DAAM;;;IAFJ,0DACA;IADA,+GACA;;;IAEF,0EACE;IAAA,uDACA;IAAA,uEAAM;IAAA,sEAAM;IAAA,4DAAO;IACrB,4DAAM;;;IAFJ,0DACA;IADA,+GACA;;;IAdJ,yEACE;IAAA,yEACE;IAAA,iFAA0D;IAC5D,4DAAM;IACN,sHACE;IAGF,sHACE;IAGF,sHACE;IAGF,yEACE;IAAA,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,oEAAG;IAAA,wDAAuB;IAAA,4DAAI;IAChC,4DAAM;IACR,4DAAM;;;IAlBgB,0DAAoB;IAApB,oFAAoB;IAEtB,0DAAoB;IAApB,qFAAoB;IAIhB,0DAA0B;IAA1B,2FAA0B;IAIzB,0DAA0B;IAA1B,2FAA0B;IAK3C,0DAAgB;IAAhB,oFAAgB;IACjB,0DAAuB;IAAvB,2FAAuB;;ADVvB,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCRjC,iHACE;;QADgB,6EAAe;;6FDQpB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAEE,mDAAK;;;;;;;;;;;;;;AETR;AAAA;AAAA;AAAyD;;AAOlD,MAAM,oBAAoB;IA2B/B;QA1BA,SAAI,GAAY,SAAS,CAAC;IA0BV,CAAC;IAxBjB,IAAa,IAAI,CAAC,KAAY;QAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;YACzC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;QACD,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;YACzC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;QACD,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,EAAE;YACzC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;QACD,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAC5C,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAC5C,IAAG,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QAEhE,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAExC,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QACjD,IAAG,IAAI,CAAC,KAAK,IAAI,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;QACjD,IAAG,IAAI,CAAC,KAAK,GAAG,GAAG;YAAE,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;IAElD,CAAC;IAGD,QAAQ;IACR,CAAC;;wFA9BU,oBAAoB;oGAApB,oBAAoB;QCPjC,oEACA;;QADK,6KAAoD;;6FDO5C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;kBAIE,mDAAK;;;;;;;;;;;;;;AEVR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,GAAG,EAAE,kCAAkC;CACxC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {trigger, style, animate, query, stagger, transition} from '@angular/animations'\r\nexport const loadingAnimation = function(){\r\n  return trigger('loading', [\r\n    transition('* => *', [\r\n      query(':leave', [\r\n        stagger(100, [\r\n          animate('350ms', style({opacity:0}))\r\n        ])\r\n      ], {optional:true}),\r\n      query(':enter', [\r\n        style({opacity:0}),\r\n        stagger(100, [\r\n          animate('350ms', style({opacity:1}))\r\n        ])\r\n      ], {optional:true})\r\n    ])\r\n  ]);\r\n}\r\n","import { trigger, style, animate, query, state, transition, stagger } from '@angular/animations';\r\nexport const showUpStaggered = trigger('showUpCollection', [\r\n  transition('* => *', [\r\n    query(':enter', [\r\n      style({opacity: 0, transform: 'scaleY(0)'}),\r\n      stagger(70, [\r\n        animate(250, style({ opacity:1, transform: 'scaleY(1)'}))\r\n      ]),\r\n    ], {optional: true})\r\n  ])\r\n])\r\n\r\nexport const showUp = trigger('showUpElement',[\r\n  state('in', style({ opacity:1, transform: 'scaleY(1)'})),\r\n  transition(':enter', [\r\n    style({opacity: 0, transform: 'scaleY(0)'}),\r\n    animate(250)\r\n  ])\r\n])\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ForecastService } from './services/forecast.service';\nimport { GeolocationService } from './services/geolocation.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent {\n  title = 'weather';\n\n  constructor(public geolocationService : GeolocationService) {}\n  ngOnInit() {\n    // this.geolocationService.requestGeolocation();\n  }\n}\n","<div>\n  <app-current-weather></app-current-weather>\n  <app-loading></app-loading>\n  <app-forecast></app-forecast>\n  <app-geolocation-button></app-geolocation-button>\n  {{this.geolocationService.coords$ | async | json}}\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\nimport { WeatherIconComponent } from './weather-icon/weather-icon.component';\nimport { WeatherCardComponent } from './weather-card/weather-card.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GeolocationButtonComponent } from './geolocation-button/geolocation-button.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrentWeatherComponent,\n    WeatherIconComponent,\n    WeatherCardComponent,\n    ForecastComponent,\n    LoadingComponent,\n    GeolocationButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeatherService } from '../services/current-weather.service';\nimport { showUp } from '../animations/showUp.animations';\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.scss'],\n  animations: [showUp]\n})\nexport class CurrentWeatherComponent implements OnInit {\n\n  constructor(public weatherService : CurrentWeatherService) { }\n\n  ngOnInit(): void {\n    // this.weather.weather$.subscribe(console.log);\n  }\n\n}\n","<app-weather-card [@showUpElement] [weather]=\"weatherService.weather$ | async\"></app-weather-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ForecastService } from '../services/forecast.service';\nimport { showUpStaggered } from '../animations/showUp.animations';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.sass'],\n  animations: [showUpStaggered]\n})\nexport class ForecastComponent implements OnInit {\n\n  constructor(public forecastService : ForecastService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [@showUpCollection] = \"(forecastService.weather$ | async)?.length\">\n  <app-weather-card [weather]=\"weather\" *ngFor=\"let weather of forecastService.weather$ | async\">\n\n  </app-weather-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { GeolocationService } from '../services/geolocation.service';\n\n@Component({\n  selector: 'app-geolocation-button',\n  templateUrl: './geolocation-button.component.html',\n  styleUrls: ['./geolocation-button.component.sass']\n})\nexport class GeolocationButtonComponent implements OnInit {\n  active: boolean = false;\n  constructor(public geolocationService: GeolocationService) { }\n\n  ngOnInit(): void {\n    this.geolocationService.permissions$.then((status) => {\n      console.log(status)\n      this.active = status == 'granted'\n      if(this.active)\n        this.geolocationService.requestGeolocation()\n    })\n  }\n\n}\n","<div *ngIf=\"!(geolocationService.coords$ | async)\">\n  <button (click)=\"geolocationService.requestGeolocation()\">\n    Activar mi ubicación\n  </button>\n  <p>Activa tu ubicación para recibir los datos del clima de tu ciudad</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { loadingAnimation } from '../animations/loading.animation';\nimport { CurrentWeatherService } from '../services/current-weather.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.sass'],\n  animations: [loadingAnimation()]\n})\nexport class LoadingComponent implements OnInit {\n  _elements : string [] = ['#ffe5ec', '#ff80a0', '#ff2e63', '#800020','#1a0006']\n  elements : string [] = this._elements;\n\n\n  constructor(public currentWeatherService : CurrentWeatherService) { }\n\n  ngOnInit(): void {\n    this.set();\n  }\n\n  set(){\n    this.elements = this._elements;\n    this.scheduleNextIteration();\n  }\n\n  scheduleNextIteration(){\n    setTimeout(()=>{\n      if(this.elements.length == 0) return this.set()\n      this.clear();\n    }, 100 * this._elements.length + 300)\n  }\n  clear(){\n    this.elements = [];\n    this.scheduleNextIteration();\n  }\n}\n","<div [@loading]=\"elements.length\" *ngIf=\"!(currentWeatherService.weather$ | async)\">\n  <div *ngFor=\"let color of elements\" class=\"circle\" [ngStyle]=\"{'background-color': color}\"></div>\n</div>\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport {Subject, Observable} from 'rxjs'\nimport {environment} from '../../environments/environment'\nimport { Coords } from 'src/structures/coords.structure';\nimport {map} from 'rxjs/operators'\nimport { Weather } from 'src/structures/weather.structure';\nimport { GeolocationService } from './geolocation.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentWeatherService {\n  public weatherSubject : Subject<any> = new Subject<any>();\n  public weather$ : Observable<any>;\n\n  endpoint : string = 'https://api.openweathermap.org/data/2.5/weather'\n\n  constructor(private http : HttpClient, private geolocationService: GeolocationService) {\n    // this.weather$.pipe\n    this.weather$ = this.weatherSubject.asObservable().pipe(\n      map((data : any) => {\n        let mainWeather = data.weather[0];\n        let weather : Weather = {\n          name: data.name,\n          cod: data.cod,\n          temp: data.main.temp,\n          ...mainWeather,\n        };\n        return weather;\n    }))\n    this.geolocationService.coords$.subscribe((coords) => {\n      this.get(coords);\n    })\n   }\n\n  get(coords : Coords){\n    //Observable\n    let args : string = `?lat=${coords.lat}&lon=${coords.lon}&appid=${environment.key}&units=metric`;\n    let url = this.endpoint + args\n    // if(isDevMode()){\n    //   url = 'assets/weather.json'\n    //   // return this.http.get('assets/weather.json').subscribe(this.weatherSubject)\n    // }\n\n    let observable = this.http.get(url).subscribe(this.weatherSubject);\n  }\n  //Subject es un observer y observable\n  //Observable -> Observer se suscribe al observable\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Subject, Observable } from 'rxjs'\nimport { environment } from '../../environments/environment'\nimport { Coords } from 'src/structures/coords.structure';\nimport { map } from 'rxjs/operators'\nimport { Weather } from 'src/structures/weather.structure';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n  public weatherSubject: Subject<any> = new Subject<any>();\n  public weather$: Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/forecast'\n\n  constructor(private http: HttpClient, private geolocationService: GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(map(this.structureData));\n    this.geolocationService.coords$.subscribe((coords) => {\n      this.get(coords);\n    })\n\n  }\n\n  structureData(data: any) {\n    let minMaxPerDay = {};\n    data.list.forEach(weatherObject => {\n      let date = new Date(weatherObject.dt * 1000);\n      let hours = date.getHours();\n      let month = date.getMonth();\n      let day = date.getDate();\n      let key = `${month}-${day}`\n\n      let tempPerDay: Weather = minMaxPerDay[key] || {\n        minMaxTemp: {}\n      };\n\n      if (!tempPerDay.cod || hours === 16) {\n        let source = weatherObject.weather[0]\n        tempPerDay = { ...tempPerDay, ...source };\n        tempPerDay.cod = source.id\n        tempPerDay.name = data.city.name\n      }\n\n      if (!tempPerDay.minMaxTemp.min || weatherObject.main.temp_min < tempPerDay.minMaxTemp.min) {\n        tempPerDay.minMaxTemp.min = weatherObject.main.temp_min\n      }\n      if (!tempPerDay.minMaxTemp.max || weatherObject.main.temp_max > tempPerDay.minMaxTemp.max) {\n        tempPerDay.minMaxTemp.max = weatherObject.main.temp_max\n      }\n\n      minMaxPerDay[key] = tempPerDay;\n    });\n    return Object.values(minMaxPerDay);\n  }\n\n  get(coords: Coords) {\n    //Observable\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&appid=${environment.key}&units=metric`;\n    let url = this.endpoint + args\n    // if (isDevMode()) {\n    //   url = 'assets/forecast.json'\n    //   // return this.http.get('assets/weather.json').subscribe(this.weatherSubject)\n    // }\n\n    let observable = this.http.get(url).subscribe(this.weatherSubject);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Coords } from 'src/structures/coords.structure';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  public coordsSubject: Subject<Coords> = new Subject<Coords>();\n  public coords$ : Observable<Coords> = this.coordsSubject.asObservable();\n  public permissions$ : Promise<string>;\n  public coordsPromise : Promise<Coords>;\n\n  constructor() {\n    this.permissions$ = (navigator as any).permissions.query({name:'geolocation'}).then(permission => {\n      return permission.state\n    })\n  }\n\n  requestGeolocation(){\n    if(!this.coordsPromise){\n      this.coordsPromise = this.getGeolocation();\n    }\n\n    this.coordsPromise.then(coords => {\n      this.coordsSubject.next(coords)\n    });\n  }\n\n  getGeolocation() : Promise<Coords>{\n    return new Promise((res, rej) => {\n      if(!navigator || !('geolocation' in navigator)) rej('Geolocation is not available');\n      navigator.geolocation.getCurrentPosition((position) => {\n        res({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        })\n      })\n    })\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from 'src/structures/weather.structure';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss']\n})\nexport class WeatherCardComponent implements OnInit {\n  @Input() weather : Weather;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" *ngIf=\"weather\">\n  <div class=\"icon\">\n    <app-weather-icon [code]=\"weather.cod\"></app-weather-icon>\n  </div>\n  <div class=\"temp\" *ngIf=\"weather.temp\">\n    <p>Temperatura</p>\n    <p class=\"big\">{{weather.temp}}°</p>\n  </div>\n  <div class=\"low-temp\" *ngIf=\"weather.minMaxTemp\">\n    {{weather.minMaxTemp.min}}°\n    <span>Mínima</span>\n  </div>\n  <div class=\"high-temp\" *ngIf=\"weather.minMaxTemp\">\n    {{weather.minMaxTemp.max}}°\n    <span>Máxima</span>\n  </div>\n  <div class=\"description\">\n    <h2>{{weather.name}}</h2>\n    <p>{{weather.description}}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-icon',\n  templateUrl: './weather-icon.component.html',\n  styleUrls: ['./weather-icon.component.sass']\n})\nexport class WeatherIconComponent implements OnInit {\n  icon : string = 'weather';\n  _code : number;\n  @Input() set code(value:number){\n    this._code = value;\n    this.icon = null;\n\n    if(this._code >= 200 && this._code <= 250) {\n      this.icon = \"thunder\";\n    }\n    if(this._code >= 300 && this._code <= 350) {\n      this.icon = \"rainy-4\";\n    }\n    if(this._code >= 500 && this._code <= 550) {\n      this.icon = \"rainy-7\";\n    }\n    if(this._code == 600) this.icon = \"snowy-4\";\n    if(this._code == 601) this.icon = \"snowy-5\";\n    if(this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n    if(this._code == 800) this.icon = \"day\";\n\n    if(this._code == 801) this.icon = \"cloudy-day-1\";\n    if(this._code == 802) this.icon = \"cloudy-day-2\";\n    if(this._code > 802) this.icon = \"cloudy-day-3\";\n\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<img [src]=\"'../../assets/svg-weather/'+this.icon+'.svg'\">\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  key: 'daf74675232f3a9677dd3fe17129cb35'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}