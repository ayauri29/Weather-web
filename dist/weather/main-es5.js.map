{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/animations/loading.animation.ts","webpack:///src/app/animations/showUp.animations.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/current-weather/current-weather.component.ts","webpack:///src/app/current-weather/current-weather.component.html","webpack:///src/app/forecast/forecast.component.ts","webpack:///src/app/forecast/forecast.component.html","webpack:///src/app/geolocation-button/geolocation-button.component.ts","webpack:///src/app/geolocation-button/geolocation-button.component.html","webpack:///src/app/loading/loading.component.ts","webpack:///src/app/loading/loading.component.html","webpack:///src/app/services/current-weather.service.ts","webpack:///src/app/services/forecast.service.ts","webpack:///src/app/services/geolocation.service.ts","webpack:///src/app/weather-card/weather-card.component.ts","webpack:///src/app/weather-card/weather-card.component.html","webpack:///src/app/weather-icon/weather-icon.component.ts","webpack:///src/app/weather-icon/weather-icon.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","loadingAnimation","opacity","optional","showUpStaggered","transform","showUp","routes","AppRoutingModule","forRoot","imports","AppComponent","geolocationService","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CurrentWeatherComponent","weatherService","animations","ForecastComponent","forecastService","GeolocationButtonComponent","active","permissions$","status","console","log","requestGeolocation","LoadingComponent","currentWeatherService","_elements","elements","set","scheduleNextIteration","setTimeout","length","clear","CurrentWeatherService","http","weatherSubject","endpoint","weather$","asObservable","pipe","data","mainWeather","weather","name","cod","temp","main","coords$","subscribe","coords","get","args","lat","lon","key","url","observable","providedIn","ForecastService","structureData","minMaxPerDay","list","forEach","weatherObject","date","Date","dt","hours","getHours","month","getMonth","day","getDate","tempPerDay","minMaxTemp","source","city","min","temp_min","max","temp_max","Object","values","GeolocationService","coordsSubject","navigator","permissions","query","permission","state","coordsPromise","getGeolocation","next","res","rej","geolocation","getCurrentPosition","position","latitude","longitude","WeatherCardComponent","WeatherIconComponent","icon","value","_code","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {trigger, style, animate, query, stagger, transition} from '@angular/animations'\r\nexport const loadingAnimation = function(){\r\n  return trigger('loading', [\r\n    transition('* => *', [\r\n      query(':leave', [\r\n        stagger(100, [\r\n          animate('350ms', style({opacity:0}))\r\n        ])\r\n      ], {optional:true}),\r\n      query(':enter', [\r\n        style({opacity:0}),\r\n        stagger(100, [\r\n          animate('350ms', style({opacity:1}))\r\n        ])\r\n      ], {optional:true})\r\n    ])\r\n  ]);\r\n}\r\n","import { trigger, style, animate, query, state, transition, stagger } from '@angular/animations';\r\nexport const showUpStaggered = trigger('showUpCollection', [\r\n  transition('* => *', [\r\n    query(':enter', [\r\n      style({opacity: 0, transform: 'scaleY(0)'}),\r\n      stagger(70, [\r\n        animate(250, style({ opacity:1, transform: 'scaleY(1)'}))\r\n      ]),\r\n    ], {optional: true})\r\n  ])\r\n])\r\n\r\nexport const showUp = trigger('showUpElement',[\r\n  state('in', style({ opacity:1, transform: 'scaleY(1)'})),\r\n  transition(':enter', [\r\n    style({opacity: 0, transform: 'scaleY(0)'}),\r\n    animate(250)\r\n  ])\r\n])\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { ForecastService } from './services/forecast.service';\nimport { GeolocationService } from './services/geolocation.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent {\n  title = 'weather';\n\n  constructor(public geolocationService : GeolocationService) {}\n  ngOnInit() {\n    // this.geolocationService.requestGeolocation();\n  }\n}\n","<div>\n  <app-current-weather></app-current-weather>\n  <app-loading></app-loading>\n  <app-forecast></app-forecast>\n  <app-geolocation-button></app-geolocation-button>\n  {{this.geolocationService.coords$ | async | json}}\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\nimport { WeatherIconComponent } from './weather-icon/weather-icon.component';\nimport { WeatherCardComponent } from './weather-card/weather-card.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GeolocationButtonComponent } from './geolocation-button/geolocation-button.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrentWeatherComponent,\n    WeatherIconComponent,\n    WeatherCardComponent,\n    ForecastComponent,\n    LoadingComponent,\n    GeolocationButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeatherService } from '../services/current-weather.service';\nimport { showUp } from '../animations/showUp.animations';\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.scss'],\n  animations: [showUp]\n})\nexport class CurrentWeatherComponent implements OnInit {\n\n  constructor(public weatherService : CurrentWeatherService) { }\n\n  ngOnInit(): void {\n    // this.weather.weather$.subscribe(console.log);\n  }\n\n}\n","<app-weather-card [@showUpElement] [weather]=\"weatherService.weather$ | async\"></app-weather-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ForecastService } from '../services/forecast.service';\nimport { showUpStaggered } from '../animations/showUp.animations';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.sass'],\n  animations: [showUpStaggered]\n})\nexport class ForecastComponent implements OnInit {\n\n  constructor(public forecastService : ForecastService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [@showUpCollection] = \"(forecastService.weather$ | async)?.length\">\n  <app-weather-card [weather]=\"weather\" *ngFor=\"let weather of forecastService.weather$ | async\">\n\n  </app-weather-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { GeolocationService } from '../services/geolocation.service';\n\n@Component({\n  selector: 'app-geolocation-button',\n  templateUrl: './geolocation-button.component.html',\n  styleUrls: ['./geolocation-button.component.sass']\n})\nexport class GeolocationButtonComponent implements OnInit {\n  active: boolean = false;\n  constructor(public geolocationService: GeolocationService) { }\n\n  ngOnInit(): void {\n    this.geolocationService.permissions$.then((status) => {\n      console.log(status)\n      this.active = status == 'granted'\n      if(this.active)\n        this.geolocationService.requestGeolocation()\n    })\n  }\n\n}\n","<div *ngIf=\"!(geolocationService.coords$ | async)\">\n  <button (click)=\"geolocationService.requestGeolocation()\">\n    Activar mi ubicación\n  </button>\n  <p>Activa tu ubicación para recibir los datos del clima de tu ciudad</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { loadingAnimation } from '../animations/loading.animation';\nimport { CurrentWeatherService } from '../services/current-weather.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.sass'],\n  animations: [loadingAnimation()]\n})\nexport class LoadingComponent implements OnInit {\n  _elements : string [] = ['#ffe5ec', '#ff80a0', '#ff2e63', '#800020','#1a0006']\n  elements : string [] = this._elements;\n\n\n  constructor(public currentWeatherService : CurrentWeatherService) { }\n\n  ngOnInit(): void {\n    this.set();\n  }\n\n  set(){\n    this.elements = this._elements;\n    this.scheduleNextIteration();\n  }\n\n  scheduleNextIteration(){\n    setTimeout(()=>{\n      if(this.elements.length == 0) return this.set()\n      this.clear();\n    }, 100 * this._elements.length + 300)\n  }\n  clear(){\n    this.elements = [];\n    this.scheduleNextIteration();\n  }\n}\n","<div [@loading]=\"elements.length\" *ngIf=\"!(currentWeatherService.weather$ | async)\">\n  <div *ngFor=\"let color of elements\" class=\"circle\" [ngStyle]=\"{'background-color': color}\"></div>\n</div>\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport {Subject, Observable} from 'rxjs'\nimport {environment} from '../../environments/environment'\nimport { Coords } from 'src/structures/coords.structure';\nimport {map} from 'rxjs/operators'\nimport { Weather } from 'src/structures/weather.structure';\nimport { GeolocationService } from './geolocation.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentWeatherService {\n  public weatherSubject : Subject<any> = new Subject<any>();\n  public weather$ : Observable<any>;\n\n  endpoint : string = 'https://api.openweathermap.org/data/2.5/weather'\n\n  constructor(private http : HttpClient, private geolocationService: GeolocationService) {\n    // this.weather$.pipe\n    this.weather$ = this.weatherSubject.asObservable().pipe(\n      map((data : any) => {\n        let mainWeather = data.weather[0];\n        let weather : Weather = {\n          name: data.name,\n          cod: data.cod,\n          temp: data.main.temp,\n          ...mainWeather,\n        };\n        return weather;\n    }))\n    this.geolocationService.coords$.subscribe((coords) => {\n      this.get(coords);\n    })\n   }\n\n  get(coords : Coords){\n    //Observable\n    let args : string = `?lat=${coords.lat}&lon=${coords.lon}&appid=${environment.key}&units=metric`;\n    let url = this.endpoint + args\n    // if(isDevMode()){\n    //   url = 'assets/weather.json'\n    //   // return this.http.get('assets/weather.json').subscribe(this.weatherSubject)\n    // }\n\n    let observable = this.http.get(url).subscribe(this.weatherSubject);\n  }\n  //Subject es un observer y observable\n  //Observable -> Observer se suscribe al observable\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Subject, Observable } from 'rxjs'\nimport { environment } from '../../environments/environment'\nimport { Coords } from 'src/structures/coords.structure';\nimport { map } from 'rxjs/operators'\nimport { Weather } from 'src/structures/weather.structure';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n  public weatherSubject: Subject<any> = new Subject<any>();\n  public weather$: Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/forecast'\n\n  constructor(private http: HttpClient, private geolocationService: GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(map(this.structureData));\n    this.geolocationService.coords$.subscribe((coords) => {\n      this.get(coords);\n    })\n\n  }\n\n  structureData(data: any) {\n    let minMaxPerDay = {};\n    data.list.forEach(weatherObject => {\n      let date = new Date(weatherObject.dt * 1000);\n      let hours = date.getHours();\n      let month = date.getMonth();\n      let day = date.getDate();\n      let key = `${month}-${day}`\n\n      let tempPerDay: Weather = minMaxPerDay[key] || {\n        minMaxTemp: {}\n      };\n\n      if (!tempPerDay.cod || hours === 16) {\n        let source = weatherObject.weather[0]\n        tempPerDay = { ...tempPerDay, ...source };\n        tempPerDay.cod = source.id\n        tempPerDay.name = data.city.name\n      }\n\n      if (!tempPerDay.minMaxTemp.min || weatherObject.main.temp_min < tempPerDay.minMaxTemp.min) {\n        tempPerDay.minMaxTemp.min = weatherObject.main.temp_min\n      }\n      if (!tempPerDay.minMaxTemp.max || weatherObject.main.temp_max > tempPerDay.minMaxTemp.max) {\n        tempPerDay.minMaxTemp.max = weatherObject.main.temp_max\n      }\n\n      minMaxPerDay[key] = tempPerDay;\n    });\n    return Object.values(minMaxPerDay);\n  }\n\n  get(coords: Coords) {\n    //Observable\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&appid=${environment.key}&units=metric`;\n    let url = this.endpoint + args\n    // if (isDevMode()) {\n    //   url = 'assets/forecast.json'\n    //   // return this.http.get('assets/weather.json').subscribe(this.weatherSubject)\n    // }\n\n    let observable = this.http.get(url).subscribe(this.weatherSubject);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Coords } from 'src/structures/coords.structure';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  public coordsSubject: Subject<Coords> = new Subject<Coords>();\n  public coords$ : Observable<Coords> = this.coordsSubject.asObservable();\n  public permissions$ : Promise<string>;\n  public coordsPromise : Promise<Coords>;\n\n  constructor() {\n    this.permissions$ = (navigator as any).permissions.query({name:'geolocation'}).then(permission => {\n      return permission.state\n    })\n  }\n\n  requestGeolocation(){\n    if(!this.coordsPromise){\n      this.coordsPromise = this.getGeolocation();\n    }\n\n    this.coordsPromise.then(coords => {\n      this.coordsSubject.next(coords)\n    });\n  }\n\n  getGeolocation() : Promise<Coords>{\n    return new Promise((res, rej) => {\n      if(!navigator || !('geolocation' in navigator)) rej('Geolocation is not available');\n      navigator.geolocation.getCurrentPosition((position) => {\n        res({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        })\n      })\n    })\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from 'src/structures/weather.structure';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss']\n})\nexport class WeatherCardComponent implements OnInit {\n  @Input() weather : Weather;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" *ngIf=\"weather\">\n  <div class=\"icon\">\n    <app-weather-icon [code]=\"weather.cod\"></app-weather-icon>\n  </div>\n  <div class=\"temp\" *ngIf=\"weather.temp\">\n    <p>Temperatura</p>\n    <p class=\"big\">{{weather.temp}}°</p>\n  </div>\n  <div class=\"low-temp\" *ngIf=\"weather.minMaxTemp\">\n    {{weather.minMaxTemp.min}}°\n    <span>Mínima</span>\n  </div>\n  <div class=\"high-temp\" *ngIf=\"weather.minMaxTemp\">\n    {{weather.minMaxTemp.max}}°\n    <span>Máxima</span>\n  </div>\n  <div class=\"description\">\n    <h2>{{weather.name}}</h2>\n    <p>{{weather.description}}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-icon',\n  templateUrl: './weather-icon.component.html',\n  styleUrls: ['./weather-icon.component.sass']\n})\nexport class WeatherIconComponent implements OnInit {\n  icon : string = 'weather';\n  _code : number;\n  @Input() set code(value:number){\n    this._code = value;\n    this.icon = null;\n\n    if(this._code >= 200 && this._code <= 250) {\n      this.icon = \"thunder\";\n    }\n    if(this._code >= 300 && this._code <= 350) {\n      this.icon = \"rainy-4\";\n    }\n    if(this._code >= 500 && this._code <= 550) {\n      this.icon = \"rainy-7\";\n    }\n    if(this._code == 600) this.icon = \"snowy-4\";\n    if(this._code == 601) this.icon = \"snowy-5\";\n    if(this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n    if(this._code == 800) this.icon = \"day\";\n\n    if(this._code == 801) this.icon = \"cloudy-day-1\";\n    if(this._code == 802) this.icon = \"cloudy-day-2\";\n    if(this._code > 802) this.icon = \"cloudy-day-3\";\n\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<img [src]=\"'../../assets/svg-weather/'+this.icon+'.svg'\">\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  key: 'daf74675232f3a9677dd3fe17129cb35'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}